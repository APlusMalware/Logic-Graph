using System;
using System.Collections.Generic;

namespace APlusMalware.LogicGraph
{
    public abstract class TwoInputUnifiedOutputLogicNode<T> : UnifiedOutputLogicNode<T>
    {
        private T _left;
        private T _right;

        public sealed override Int32 MaxInputCount { get { return 2; } }

        public sealed override IEnumerable<T> InputValues
        {
            get
            {
                return new T[] { _left, _right };
            }
        }

        protected sealed override void InternalUpdate()
        {
            T left = default(T);
            T right = default(T);
            if (Inputs != null && Inputs[0].Active)
            {
                if (Inputs[0].Set)
                    left = Inputs[0].Value;
            }
            if (Inputs != null && Inputs[1].Active)
            {
                if (Inputs[1].Set)
                    right = Inputs[1].Value;
            }

            _left = left;
            _right = right;

            SetAllOutputs(Transform(left, right));
        }

        protected abstract T Transform(T left, T right);
    }
}
