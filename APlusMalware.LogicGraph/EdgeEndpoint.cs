// <copyright file="EdgeEndpoint.cs" company="aplusmalware.com">
//
// Copyright (c) 2016 A+ Malware
// All rights reserved. 
//
// MIT License
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of this
// software and associated documentation files (the "Software"), to deal in the Software 
// without restriction, including without limitation the rights to use, copy, modify, merge,
// publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all copies or
// substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
// PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
// FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
// </copyright>
// <author>A+ Malware</author>

namespace APlusMalware.LogicGraph
{
    using System;

    /// <summary>
    /// An endpoint of an edge between two logic nodes.
    /// </summary>
    /// <typeparam name="T">The type of node of the endpoint.</typeparam>
    internal class EdgeEndpoint<T>
    {
        /// <summary>
        /// Gets or sets a value indicating whether the endpoint is active.
        /// </summary>
        public Boolean Active { get; set; }

        /// <summary>
        /// Gets or sets the node this edge endpoint connects to.
        /// </summary>
        public LogicNode<T> Node { get; set; }

        /// <summary>
        /// Gets or sets the input index of the node that this node uses.
        /// </summary>
        public Int32 Index { get; set; } = -1;
    }
}
